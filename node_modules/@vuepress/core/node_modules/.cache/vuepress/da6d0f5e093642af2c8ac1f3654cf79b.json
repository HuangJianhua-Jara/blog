{"remainingRequest":"E:\\测试个人博客2\\blog\\node_modules\\vue-loader\\lib\\index.js??ref--1-1!E:\\测试个人博客2\\blog\\node_modules\\@vuepress\\markdown-loader\\index.js??ref--1-2!E:\\测试个人博客2\\blog\\blog\\README.md?vue&type=script&lang=js&","dependencies":[{"path":"E:\\测试个人博客2\\blog\\blog\\README.md","mtime":1638266801586},{"path":"E:\\测试个人博客2\\blog\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1622039384438},{"path":"E:\\测试个人博客2\\blog\\node_modules\\babel-loader\\lib\\index.js","mtime":1622039381134},{"path":"E:\\测试个人博客2\\blog\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1622039384438},{"path":"E:\\测试个人博客2\\blog\\node_modules\\vue-loader\\lib\\index.js","mtime":1622039385909},{"path":"E:\\测试个人博客2\\blog\\node_modules\\@vuepress\\markdown-loader\\index.js","mtime":1622039395414}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCgoKZXhwb3J0IGRlZmF1bHQgewoKICBtb3VudGVkICgpIHsKICAgIGNvbnN0IGlmSmFuY2hvciA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJKYW5jaG9yRG93biIpOyAKICAgIGlmSmFuY2hvciAmJiBpZkphbmNob3IucGFyZW50Tm9kZS5yZW1vdmVDaGlsZChpZkphbmNob3IpOwogICAgbGV0IGEgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdhJyk7CiAgICBhLmlkID0gJ0phbmNob3JEb3duJzsKICAgIGEuY2xhc3NOYW1lID0gJ2FuY2hvci1kb3duJzsKICAgIGRvY3VtZW50LmdldEVsZW1lbnRzQnlDbGFzc05hbWUoJ2hlcm8nKVswXS5hcHBlbmQoYSk7CiAgICBsZXQgdGFyZ2V0QSA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJKYW5jaG9yRG93biIpOwogICAgdGFyZ2V0QS5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIGUgPT4geyAvLyDmt7vliqDngrnlh7vkuovku7YKICAgICAgdGhpcy5zY3JvbGxGbigpOwogICAgfSk7CiAgICAKICAgIGNsYXNzIFRleHRTY3JhbWJsZSB7CiAgICAgICAgY29uc3RydWN0b3IoZWwpIHsKICAgICAgICAgICAgdGhpcy5lbCA9IGVsOwogICAgICAgICAgICB0aGlzLmNoYXJzID0gIiE8Pi1fL1tde33igJQ9KypePyNfX19fX19fXyI7CiAgICAgICAgICAgIHRoaXMudXBkYXRlID0gdGhpcy51cGRhdGUuYmluZCh0aGlzKTsKICAgICAgICB9CiAgICAgICAgc2V0VGV4dChuZXdUZXh0KSB7CiAgICAgICAgICAgIGNvbnN0IG9sZFRleHQgPSB0aGlzLmVsLmlubmVyVGV4dDsKICAgICAgICAgICAgY29uc3QgbGVuZ3RoID0gTWF0aC5tYXgob2xkVGV4dC5sZW5ndGgsIG5ld1RleHQubGVuZ3RoKTsKICAgICAgICAgICAgY29uc3QgcHJvbWlzZSA9IG5ldyBQcm9taXNlKChyZXNvbHZlKSA9PiAodGhpcy5yZXNvbHZlID0gcmVzb2x2ZSkpOwogICAgICAgICAgICB0aGlzLnF1ZXVlID0gW107CiAgICAgICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgbGVuZ3RoOyBpKyspIHsKICAgICAgICAgICAgICAgIGNvbnN0IGZyb20gPSBvbGRUZXh0W2ldIHx8ICIiOwogICAgICAgICAgICAgICAgY29uc3QgdG8gPSBuZXdUZXh0W2ldIHx8ICIiOwogICAgICAgICAgICAgICAgY29uc3Qgc3RhcnQgPSBNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkgKiA0MCk7CiAgICAgICAgICAgICAgICBjb25zdCBlbmQgPSBzdGFydCArIE1hdGguZmxvb3IoTWF0aC5yYW5kb20oKSAqIDQwKTsKICAgICAgICAgICAgICAgIHRoaXMucXVldWUucHVzaCh7IGZyb20sIHRvLCBzdGFydCwgZW5kIH0pOwogICAgICAgICAgICB9CiAgICAgICAgICAgIGNhbmNlbEFuaW1hdGlvbkZyYW1lKHRoaXMuZnJhbWVSZXF1ZXN0KTsKICAgICAgICAgICAgdGhpcy5mcmFtZSA9IDA7CiAgICAgICAgICAgIHRoaXMudXBkYXRlKCk7CiAgICAgICAgICAgIHJldHVybiBwcm9taXNlOwogICAgICAgIH0KICAgICAgICB1cGRhdGUoKSB7CiAgICAgICAgICAgIGxldCBvdXRwdXQgPSAiIjsKICAgICAgICAgICAgbGV0IGNvbXBsZXRlID0gMDsKICAgICAgICAgICAgZm9yIChsZXQgaSA9IDAsIG4gPSB0aGlzLnF1ZXVlLmxlbmd0aDsgaSA8IG47IGkrKykgewogICAgICAgICAgICAgICAgbGV0IHsgZnJvbSwgdG8sIHN0YXJ0LCBlbmQsIGNoYXIgfSA9IHRoaXMucXVldWVbaV07CiAgICAgICAgICAgICAgICBpZiAodGhpcy5mcmFtZSA+PSBlbmQpIHsKICAgICAgICAgICAgICAgICAgICBjb21wbGV0ZSsrOwogICAgICAgICAgICAgICAgICAgIG91dHB1dCArPSB0bzsKICAgICAgICAgICAgICAgIH0gZWxzZSBpZiAodGhpcy5mcmFtZSA+PSBzdGFydCkgewogICAgICAgICAgICAgICAgICAgIGlmICghY2hhciB8fCBNYXRoLnJhbmRvbSgpIDwgMC4yOCkgewogICAgICAgICAgICAgICAgICAgICAgICBjaGFyID0gdGhpcy5yYW5kb21DaGFyKCk7CiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMucXVldWVbaV0uY2hhciA9IGNoYXI7CiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgIG91dHB1dCArPSBgPHNwYW4gY2xhc3M9ImR1ZCI+JHtjaGFyfTwvc3Bhbj5gOwogICAgICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgICAgICBvdXRwdXQgKz0gZnJvbTsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgICAgICB0aGlzLmVsLmlubmVySFRNTCA9IG91dHB1dDsKICAgICAgICAgICAgaWYgKGNvbXBsZXRlID09PSB0aGlzLnF1ZXVlLmxlbmd0aCkgewogICAgICAgICAgICAgICAgdGhpcy5yZXNvbHZlKCk7CiAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICB0aGlzLmZyYW1lUmVxdWVzdCA9IHJlcXVlc3RBbmltYXRpb25GcmFtZSh0aGlzLnVwZGF0ZSk7CiAgICAgICAgICAgICAgICB0aGlzLmZyYW1lKys7CiAgICAgICAgICAgIH0KICAgICAgICB9CiAgICAgICAgcmFuZG9tQ2hhcigpIHsKICAgICAgICAgICAgcmV0dXJuIHRoaXMuY2hhcnNbTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogdGhpcy5jaGFycy5sZW5ndGgpXTsKICAgICAgICB9CiAgICB9CgogICAgLy8g5L2/55So5pa55rOVCiAgICBsZXQgZWwgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCIjZGVzY1RleHQiKTsKICAgIGNvbnNvbGUubG9nKCJlbDogIiwgZWwpOwogICAgaWYgKCFlbCkgewogICAgICAgIGNvbnN0IHRpbWVyID0gc2V0SW50ZXJ2YWwoKCkgPT4gewogICAgICAgICAgICBpZiAoZWwpIHsKICAgICAgICAgICAgICAgIGluaXQoKTsKICAgICAgICAgICAgICAgIHRpbWVyICYmIGNsZWFySW50ZXJ2YWwodGltZXIpOwogICAgICAgICAgICB9CiAgICAgICAgICAgIGVsID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcigiI2Rlc2NUZXh0Iik7CiAgICAgICAgfSwgMTAwKTsKICAgIH0gZWxzZSB7CiAgICAgICAgaW5pdCgpOwogICAgfQoKICAgIGZ1bmN0aW9uIGluaXQoKSB7CiAgICAgICAgY29uc3QgZnggPSBuZXcgVGV4dFNjcmFtYmxlKGVsKTsKICAgICAgICBjb25zdCBwaHJhc2VzID0gWwogICAgICAgICAgICAi5oiR5piv5LiA5ZCN5YmN56uvIiwKICAgICAgICAgICAgIueIseWQg+Wwj+eGiumlvOW5siIsCiAgICAgICAgICAgICLkuIrnj63lj6rkuLrkuIvnj60iLAogICAgICAgICAgICAi5bel6LWE5Yia5aSf5pep6aSQIiwKICAgICAgICAgICAgIuavj+aZmumDveimgeWKoOePrSIsCiAgICAgICAgICAgICLlj6rmsYLnur/kuIrlubPlrokiLAogICAgICAgICAgICAi5aS05Y+R5b+r6KaB5o6J5a6MIiwKICAgICAgICAgICAgIuWJjeerr+ecn+eahOWlvemaviIsCiAgICAgICAgICAgICLlj6rmmK/ml6DlkI3liY3nq68iLAogICAgICAgICAgICAi5YaZ5Luj56CB55qE5oao5oaoIgogICAgICAgIF07CiAgICAgICAgLy8gZnguc2V0VGV4dCgn5YaZ5Luj56CB55qE5oao5oaoJykKICAgICAgICBsZXQgY291bnRlciA9IDA7CiAgICAgICAgY29uc3QgbmV4dCA9ICgpID0+IHsKICAgICAgICAgICAgZnguc2V0VGV4dChwaHJhc2VzW2NvdW50ZXJdKS50aGVuKCgpID0+IHsKICAgICAgICAgICAgICAgIHNldFRpbWVvdXQobmV4dCwgMjAwMCk7CiAgICAgICAgICAgIH0pOwogICAgICAgICAgICBjb3VudGVyID0gKGNvdW50ZXIgKyAxKSAlIHBocmFzZXMubGVuZ3RoOwogICAgICAgIH07CiAgICAgICAgbmV4dCgpOwogICAgfQogIH0sCgogIG1ldGhvZHM6IHsKICAgIHNjcm9sbEZuKCkgewogICAgICBjb25zdCB3aW5kb3dIID0gZG9jdW1lbnQuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZSgnaGVybycpWzBdLmNsaWVudEhlaWdodDsgLy8g6I635Y+W56qX5Y+j6auY5bqmCiAgICAgIGRvY3VtZW50LmRvY3VtZW50RWxlbWVudC5zY3JvbGxUb3AgPSB3aW5kb3dIOyAvLyDmu5rliqjmnaHmu5rliqjliLDmjIflrprkvY3nva4KICAgIH0KICB9Cgp9Cgo="},{"version":3,"sources":["README.md"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA","file":"README.md","sourceRoot":"blog","sourcesContent":["<template>\n<ContentSlotsDistributor :slot-key=\"$parent.slotKey\"></ContentSlotsDistributor>\n</template>\n<style>\n.typing-words{\n    display: block;\n    margin: 12rem auto 0;\n    bottom: 45px;\n    width: 400px;\n    height: 300px;\n    font-size: 34px;\n    text-align: center;\n    position: absolute;\n    left: 50%;\n    bottom: 50%;\n    margin-left: -10px;\n}\n.anchor-down {\n  display: block;\n  margin: 12rem auto 0;\n  bottom: 45px;\n  width: 20px;\n  height: 20px;\n  font-size: 34px;\n  text-align: center;\n  animation: bounce-in 5s 3s infinite;\n  position: absolute;\n  left: 50%;\n  bottom: 30%;\n  margin-left: -10px;\n  cursor: pointer;\n}\n@-webkit-keyframes bounce-in{\n  0%{transform:translateY(0)}\n  20%{transform:translateY(0)}\n  50%{transform:translateY(-20px)}\n  80%{transform:translateY(0)}\n  to{transform:translateY(0)}\n}\n.anchor-down::before {\n  content: \"\";\n  width: 20px;\n  height: 20px;\n  display: block;\n  border-right: 3px solid #fff;\n  border-top: 3px solid #fff;\n  transform: rotate(135deg);\n  position: absolute;\n  bottom: 10px;\n}\n.anchor-down::after {\n  content: \"\";\n  width: 20px;\n  height: 20px;\n  display: block;\n  border-right: 3px solid #fff;\n  border-top: 3px solid #fff;\n  transform: rotate(135deg);\n}\n</style>\n\n<script>\n\n\nexport default {\n\n  mounted () {\n    const ifJanchor = document.getElementById(\"JanchorDown\"); \n    ifJanchor && ifJanchor.parentNode.removeChild(ifJanchor);\n    let a = document.createElement('a');\n    a.id = 'JanchorDown';\n    a.className = 'anchor-down';\n    document.getElementsByClassName('hero')[0].append(a);\n    let targetA = document.getElementById(\"JanchorDown\");\n    targetA.addEventListener('click', e => { // 添加点击事件\n      this.scrollFn();\n    });\n    \n    class TextScramble {\n        constructor(el) {\n            this.el = el;\n            this.chars = \"!<>-_/[]{}—=+*^?#________\";\n            this.update = this.update.bind(this);\n        }\n        setText(newText) {\n            const oldText = this.el.innerText;\n            const length = Math.max(oldText.length, newText.length);\n            const promise = new Promise((resolve) => (this.resolve = resolve));\n            this.queue = [];\n            for (let i = 0; i < length; i++) {\n                const from = oldText[i] || \"\";\n                const to = newText[i] || \"\";\n                const start = Math.floor(Math.random() * 40);\n                const end = start + Math.floor(Math.random() * 40);\n                this.queue.push({ from, to, start, end });\n            }\n            cancelAnimationFrame(this.frameRequest);\n            this.frame = 0;\n            this.update();\n            return promise;\n        }\n        update() {\n            let output = \"\";\n            let complete = 0;\n            for (let i = 0, n = this.queue.length; i < n; i++) {\n                let { from, to, start, end, char } = this.queue[i];\n                if (this.frame >= end) {\n                    complete++;\n                    output += to;\n                } else if (this.frame >= start) {\n                    if (!char || Math.random() < 0.28) {\n                        char = this.randomChar();\n                        this.queue[i].char = char;\n                    }\n                    output += `<span class=\"dud\">${char}</span>`;\n                } else {\n                    output += from;\n                }\n            }\n            this.el.innerHTML = output;\n            if (complete === this.queue.length) {\n                this.resolve();\n            } else {\n                this.frameRequest = requestAnimationFrame(this.update);\n                this.frame++;\n            }\n        }\n        randomChar() {\n            return this.chars[Math.floor(Math.random() * this.chars.length)];\n        }\n    }\n\n    // 使用方法\n    let el = document.querySelector(\"#descText\");\n    console.log(\"el: \", el);\n    if (!el) {\n        const timer = setInterval(() => {\n            if (el) {\n                init();\n                timer && clearInterval(timer);\n            }\n            el = document.querySelector(\"#descText\");\n        }, 100);\n    } else {\n        init();\n    }\n\n    function init() {\n        const fx = new TextScramble(el);\n        const phrases = [\n            \"我是一名前端\",\n            \"爱吃小熊饼干\",\n            \"上班只为下班\",\n            \"工资刚够早餐\",\n            \"每晚都要加班\",\n            \"只求线上平安\",\n            \"头发快要掉完\",\n            \"前端真的好难\",\n            \"只是无名前端\",\n            \"写代码的憨憨\"\n        ];\n        // fx.setText('写代码的憨憨')\n        let counter = 0;\n        const next = () => {\n            fx.setText(phrases[counter]).then(() => {\n                setTimeout(next, 2000);\n            });\n            counter = (counter + 1) % phrases.length;\n        };\n        next();\n    }\n  },\n\n  methods: {\n    scrollFn() {\n      const windowH = document.getElementsByClassName('hero')[0].clientHeight; // 获取窗口高度\n      document.documentElement.scrollTop = windowH; // 滚动条滚动到指定位置\n    }\n  }\n\n}\n\n</script>\n\n\n"]}]}