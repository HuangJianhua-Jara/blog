{"remainingRequest":"E:\\测试个人博客2\\blog\\node_modules\\vue-loader\\lib\\index.js??ref--1-1!E:\\测试个人博客2\\blog\\node_modules\\@vuepress\\markdown-loader\\index.js??ref--1-2!E:\\测试个人博客2\\blog\\blog\\README.md?vue&type=script&lang=js&","dependencies":[{"path":"E:\\测试个人博客2\\blog\\blog\\README.md","mtime":1622827381817},{"path":"E:\\测试个人博客2\\blog\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1622039384438},{"path":"E:\\测试个人博客2\\blog\\node_modules\\babel-loader\\lib\\index.js","mtime":1622039381134},{"path":"E:\\测试个人博客2\\blog\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1622039384438},{"path":"E:\\测试个人博客2\\blog\\node_modules\\vue-loader\\lib\\index.js","mtime":1622039385909},{"path":"E:\\测试个人博客2\\blog\\node_modules\\@vuepress\\markdown-loader\\index.js","mtime":1622039395414}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCi8vIOaJk+Wtl+acuuS7o+eggQpjbGFzcyBUZXh0U2NyYW1ibGUgewogIGNvbnN0cnVjdG9yKGVsKSB7CiAgICB0aGlzLmVsID0gZWw7CiAgICB0aGlzLmNoYXJzID0gIiE8Pi1fL1tde33igJQ9KypePyNfX19fX19fXyI7CiAgICB0aGlzLnVwZGF0ZSA9IHRoaXMudXBkYXRlLmJpbmQodGhpcyk7CiAgfQogIHNldFRleHQobmV3VGV4dCkgewogICAgY29uc3Qgb2xkVGV4dCA9IHRoaXMuZWwuaW5uZXJUZXh0OwogICAgY29uc3QgbGVuZ3RoID0gTWF0aC5tYXgob2xkVGV4dC5sZW5ndGgsIG5ld1RleHQubGVuZ3RoKTsKICAgIGNvbnN0IHByb21pc2UgPSBuZXcgUHJvbWlzZSgocmVzb2x2ZSkgPT4gKHRoaXMucmVzb2x2ZSA9IHJlc29sdmUpKTsKICAgIHRoaXMucXVldWUgPSBbXTsKICAgIGZvciAobGV0IGkgPSAwOyBpIDwgbGVuZ3RoOyBpKyspIHsKICAgICAgY29uc3QgZnJvbSA9IG9sZFRleHRbaV0gfHwgIiI7CiAgICAgIGNvbnN0IHRvID0gbmV3VGV4dFtpXSB8fCAiIjsKICAgICAgY29uc3Qgc3RhcnQgPSBNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkgKiA0MCk7CiAgICAgIGNvbnN0IGVuZCA9IHN0YXJ0ICsgTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogNDApOwogICAgICB0aGlzLnF1ZXVlLnB1c2goeyBmcm9tLCB0bywgc3RhcnQsIGVuZCB9KTsKICAgIH0KICAgIGNhbmNlbEFuaW1hdGlvbkZyYW1lKHRoaXMuZnJhbWVSZXF1ZXN0KTsKICAgIHRoaXMuZnJhbWUgPSAwOwogICAgdGhpcy51cGRhdGUoKTsKICAgIHJldHVybiBwcm9taXNlOwogIH0KICB1cGRhdGUoKSB7CiAgICBsZXQgb3V0cHV0ID0gIiI7CiAgICBsZXQgY29tcGxldGUgPSAwOwogICAgZm9yIChsZXQgaSA9IDAsIG4gPSB0aGlzLnF1ZXVlLmxlbmd0aDsgaSA8IG47IGkrKykgewogICAgICBsZXQgeyBmcm9tLCB0bywgc3RhcnQsIGVuZCwgY2hhciB9ID0gdGhpcy5xdWV1ZVtpXTsKICAgICAgaWYgKHRoaXMuZnJhbWUgPj0gZW5kKSB7CiAgICAgICAgY29tcGxldGUrKzsKICAgICAgICBvdXRwdXQgKz0gdG87CiAgICAgIH0gZWxzZSBpZiAodGhpcy5mcmFtZSA+PSBzdGFydCkgewogICAgICAgIGlmICghY2hhciB8fCBNYXRoLnJhbmRvbSgpIDwgMC4yOCkgewogICAgICAgICAgY2hhciA9IHRoaXMucmFuZG9tQ2hhcigpOwogICAgICAgICAgdGhpcy5xdWV1ZVtpXS5jaGFyID0gY2hhcjsKICAgICAgICB9CiAgICAgICAgb3V0cHV0ICs9IGA8c3BhbiBjbGFzcz0iZHVkIj4ke2NoYXJ9PC9zcGFuPmA7CiAgICAgIH0gZWxzZSB7CiAgICAgICAgb3V0cHV0ICs9IGZyb207CiAgICAgIH0KICAgIH0KICAgIHRoaXMuZWwuaW5uZXJIVE1MID0gb3V0cHV0OwogICAgaWYgKGNvbXBsZXRlID09PSB0aGlzLnF1ZXVlLmxlbmd0aCkgewogICAgICB0aGlzLnJlc29sdmUoKTsKICAgIH0gZWxzZSB7CiAgICAgIHRoaXMuZnJhbWVSZXF1ZXN0ID0gcmVxdWVzdEFuaW1hdGlvbkZyYW1lKHRoaXMudXBkYXRlKTsKICAgICAgdGhpcy5mcmFtZSsrOwogICAgfQogIH0KICByYW5kb21DaGFyKCkgewogICAgcmV0dXJuIHRoaXMuY2hhcnNbTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogdGhpcy5jaGFycy5sZW5ndGgpXTsKICB9Cn0KCi8vIOS9v+eUqOaWueazlQpsZXQgZWwgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCIjZGVzY1RleHQiKTsKY29uc29sZS5sb2coImVsOiAiLCBlbCk7CmlmICghZWwpIHsKICBjb25zdCB0aW1lciA9IHNldEludGVydmFsKCgpID0+IHsKICAgIGlmIChlbCkgewogICAgICBpbml0KCk7CiAgICAgIHRpbWVyICYmIGNsZWFySW50ZXJ2YWwodGltZXIpOwogICAgfQogICAgZWwgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCIuaGVybyAuZGVzY3JpcHRpbyIpOwogIH0sIDEwMCk7Cn0gZWxzZSB7CiAgaW5pdCgpOwp9CgpmdW5jdGlvbiBpbml0KCkgewogIGNvbnN0IGZ4ID0gbmV3IFRleHRTY3JhbWJsZShlbCk7CiAgY29uc3QgcGhyYXNlcyA9IFsKICAgICLmiJHmmK/kuIDlkI3liY3nq68iLAogICAgIueIseWQg+Wwj+eGiumlvOW5siIsCiAgICAi5LiK54+t5Y+q5Li65LiL54+tIiwKICAgICLlt6XotYTliJrlpJ/ml6nppJAiLAogICAgIuavj+aZmumDveimgeWKoOePrSIsCiAgICAi5Y+q5rGC57q/5LiK5bmz5a6JIiwKICAgICLlpLTlj5Hlv6vopoHmjonlrowiLAogICAgIuWJjeerr+ecn+eahOWlvemaviIsCiAgICAi5Y+q5piv5peg5ZCN5YmN56uvIiwKICAgICLlhpnku6PnoIHnmoTmhqjmhqgiCiAgXTsKICAvLyBmeC5zZXRUZXh0KCflhpnku6PnoIHnmoTmhqjmhqgnKQogIGxldCBjb3VudGVyID0gMDsKICBjb25zdCBuZXh0ID0gKCkgPT4gewogICAgZnguc2V0VGV4dChwaHJhc2VzW2NvdW50ZXJdKS50aGVuKCgpID0+IHsKICAgICAgc2V0VGltZW91dChuZXh0LCAyMDAwKTsKICAgIH0pOwogICAgY291bnRlciA9IChjb3VudGVyICsgMSkgJSBwaHJhc2VzLmxlbmd0aDsKICB9OwogIG5leHQoKTsKfQo="},{"version":3,"sources":["README.md"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0FA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"README.md","sourceRoot":"blog","sourcesContent":["<template>\n<ContentSlotsDistributor :slot-key=\"$parent.slotKey\"></ContentSlotsDistributor>\n</template>\n<style>\n.typing-words{\n    display: block;\n    margin: 12rem auto 0;\n    bottom: 45px;\n    width: 400px;\n    height: 300px;\n    font-size: 34px;\n    text-align: center;\n    position: absolute;\n    left: 50%;\n    bottom: 50%;\n    margin-left: -10px;\n}\n.anchor-down {\n  display: block;\n  margin: 12rem auto 0;\n  bottom: 45px;\n  width: 20px;\n  height: 20px;\n  font-size: 34px;\n  text-align: center;\n  animation: bounce-in 5s 3s infinite;\n  position: absolute;\n  left: 50%;\n  bottom: 30%;\n  margin-left: -10px;\n  cursor: pointer;\n}\n@-webkit-keyframes bounce-in{\n  0%{transform:translateY(0)}\n  20%{transform:translateY(0)}\n  50%{transform:translateY(-20px)}\n  80%{transform:translateY(0)}\n  to{transform:translateY(0)}\n}\n.anchor-down::before {\n  content: \"\";\n  width: 20px;\n  height: 20px;\n  display: block;\n  border-right: 3px solid #fff;\n  border-top: 3px solid #fff;\n  transform: rotate(135deg);\n  position: absolute;\n  bottom: 10px;\n}\n.anchor-down::after {\n  content: \"\";\n  width: 20px;\n  height: 20px;\n  display: block;\n  border-right: 3px solid #fff;\n  border-top: 3px solid #fff;\n  transform: rotate(135deg);\n}\n</style>\n\n<script>\n\n\nexport default {\n\n  mounted () {\n    const ifJanchor = document.getElementById(\"JanchorDown\"); \n    ifJanchor && ifJanchor.parentNode.removeChild(ifJanchor);\n    let a = document.createElement('a');\n    a.id = 'JanchorDown';\n    a.className = 'anchor-down';\n    document.getElementsByClassName('hero')[0].append(a);\n    let targetA = document.getElementById(\"JanchorDown\");\n    targetA.addEventListener('click', e => { // 添加点击事件\n      this.scrollFn();\n    });\n  },\n\n  methods: {\n    scrollFn() {\n      const windowH = document.getElementsByClassName('hero')[0].clientHeight; // 获取窗口高度\n      document.documentElement.scrollTop = windowH; // 滚动条滚动到指定位置\n    }\n  }\n\n}\n</script>\n\n<script>\n      // 打字机代码\n      class TextScramble {\n        constructor(el) {\n          this.el = el;\n          this.chars = \"!<>-_/[]{}—=+*^?#________\";\n          this.update = this.update.bind(this);\n        }\n        setText(newText) {\n          const oldText = this.el.innerText;\n          const length = Math.max(oldText.length, newText.length);\n          const promise = new Promise((resolve) => (this.resolve = resolve));\n          this.queue = [];\n          for (let i = 0; i < length; i++) {\n            const from = oldText[i] || \"\";\n            const to = newText[i] || \"\";\n            const start = Math.floor(Math.random() * 40);\n            const end = start + Math.floor(Math.random() * 40);\n            this.queue.push({ from, to, start, end });\n          }\n          cancelAnimationFrame(this.frameRequest);\n          this.frame = 0;\n          this.update();\n          return promise;\n        }\n        update() {\n          let output = \"\";\n          let complete = 0;\n          for (let i = 0, n = this.queue.length; i < n; i++) {\n            let { from, to, start, end, char } = this.queue[i];\n            if (this.frame >= end) {\n              complete++;\n              output += to;\n            } else if (this.frame >= start) {\n              if (!char || Math.random() < 0.28) {\n                char = this.randomChar();\n                this.queue[i].char = char;\n              }\n              output += `<span class=\"dud\">${char}</span>`;\n            } else {\n              output += from;\n            }\n          }\n          this.el.innerHTML = output;\n          if (complete === this.queue.length) {\n            this.resolve();\n          } else {\n            this.frameRequest = requestAnimationFrame(this.update);\n            this.frame++;\n          }\n        }\n        randomChar() {\n          return this.chars[Math.floor(Math.random() * this.chars.length)];\n        }\n      }\n\n      // 使用方法\n      let el = document.querySelector(\"#descText\");\n      console.log(\"el: \", el);\n      if (!el) {\n        const timer = setInterval(() => {\n          if (el) {\n            init();\n            timer && clearInterval(timer);\n          }\n          el = document.querySelector(\".hero .descriptio\");\n        }, 100);\n      } else {\n        init();\n      }\n\n      function init() {\n        const fx = new TextScramble(el);\n        const phrases = [\n          \"我是一名前端\",\n          \"爱吃小熊饼干\",\n          \"上班只为下班\",\n          \"工资刚够早餐\",\n          \"每晚都要加班\",\n          \"只求线上平安\",\n          \"头发快要掉完\",\n          \"前端真的好难\",\n          \"只是无名前端\",\n          \"写代码的憨憨\"\n        ];\n        // fx.setText('写代码的憨憨')\n        let counter = 0;\n        const next = () => {\n          fx.setText(phrases[counter]).then(() => {\n            setTimeout(next, 2000);\n          });\n          counter = (counter + 1) % phrases.length;\n        };\n        next();\n      }\n    </script>\n\n"]}]}