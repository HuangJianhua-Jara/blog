{"remainingRequest":"E:\\测试个人博客2\\blog\\node_modules\\babel-loader\\lib\\index.js??ref--3-1!E:\\测试个人博客2\\blog\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!E:\\测试个人博客2\\blog\\node_modules\\vue-loader\\lib\\index.js??ref--1-1!E:\\测试个人博客2\\blog\\node_modules\\@vuepress\\markdown-loader\\index.js??ref--1-2!E:\\测试个人博客2\\blog\\blog\\README.md?vue&type=script&lang=js&","dependencies":[{"path":"E:\\测试个人博客2\\blog\\blog\\README.md","mtime":1622863259788},{"path":"E:\\测试个人博客2\\blog\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1622039384438},{"path":"E:\\测试个人博客2\\blog\\node_modules\\babel-loader\\lib\\index.js","mtime":1622039381134},{"path":"E:\\测试个人博客2\\blog\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1622039384438},{"path":"E:\\测试个人博客2\\blog\\node_modules\\vue-loader\\lib\\index.js","mtime":1622039385909},{"path":"E:\\测试个人博客2\\blog\\node_modules\\@vuepress\\markdown-loader\\index.js","mtime":1622039395414}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KZXhwb3J0IGRlZmF1bHQgewogIG1vdW50ZWQ6IGZ1bmN0aW9uIG1vdW50ZWQoKSB7CiAgICB2YXIgX3RoaXMgPSB0aGlzOwoKICAgIHZhciBpZkphbmNob3IgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgiSmFuY2hvckRvd24iKTsKICAgIGlmSmFuY2hvciAmJiBpZkphbmNob3IucGFyZW50Tm9kZS5yZW1vdmVDaGlsZChpZkphbmNob3IpOwogICAgdmFyIGEgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdhJyk7CiAgICBhLmlkID0gJ0phbmNob3JEb3duJzsKICAgIGEuY2xhc3NOYW1lID0gJ2FuY2hvci1kb3duJzsKICAgIGRvY3VtZW50LmdldEVsZW1lbnRzQnlDbGFzc05hbWUoJ2hlcm8nKVswXS5hcHBlbmQoYSk7CiAgICB2YXIgdGFyZ2V0QSA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJKYW5jaG9yRG93biIpOwogICAgdGFyZ2V0QS5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIGZ1bmN0aW9uIChlKSB7CiAgICAgIC8vIOa3u+WKoOeCueWHu+S6i+S7tgogICAgICBfdGhpcy5zY3JvbGxGbigpOwogICAgfSk7CiAgfSwKICBtZXRob2RzOiB7CiAgICBzY3JvbGxGbjogZnVuY3Rpb24gc2Nyb2xsRm4oKSB7CiAgICAgIHZhciB3aW5kb3dIID0gZG9jdW1lbnQuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZSgnaGVybycpWzBdLmNsaWVudEhlaWdodDsgLy8g6I635Y+W56qX5Y+j6auY5bqmCgogICAgICBkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQuc2Nyb2xsVG9wID0gd2luZG93SDsgLy8g5rua5Yqo5p2h5rua5Yqo5Yiw5oyH5a6a5L2N572uCiAgICB9CiAgfQp9OyAvLyAvLyDmiZPlrZfmnLrku6PnoIEKLy8gICAgICAgY2xhc3MgVGV4dFNjcmFtYmxlIHsKLy8gICAgICAgICBjb25zdHJ1Y3RvcihlbCkgewovLyAgICAgICAgICAgdGhpcy5lbCA9IGVsOwovLyAgICAgICAgICAgdGhpcy5jaGFycyA9ICIhPD4tXy9bXXt94oCUPSsqXj8jX19fX19fX18iOwovLyAgICAgICAgICAgdGhpcy51cGRhdGUgPSB0aGlzLnVwZGF0ZS5iaW5kKHRoaXMpOwovLyAgICAgICAgIH0KLy8gICAgICAgICBzZXRUZXh0KG5ld1RleHQpIHsKLy8gICAgICAgICAgIGNvbnN0IG9sZFRleHQgPSB0aGlzLmVsLmlubmVyVGV4dDsKLy8gICAgICAgICAgIGNvbnN0IGxlbmd0aCA9IE1hdGgubWF4KG9sZFRleHQubGVuZ3RoLCBuZXdUZXh0Lmxlbmd0aCk7Ci8vICAgICAgICAgICBjb25zdCBwcm9taXNlID0gbmV3IFByb21pc2UoKHJlc29sdmUpID0+ICh0aGlzLnJlc29sdmUgPSByZXNvbHZlKSk7Ci8vICAgICAgICAgICB0aGlzLnF1ZXVlID0gW107Ci8vICAgICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IGxlbmd0aDsgaSsrKSB7Ci8vICAgICAgICAgICAgIGNvbnN0IGZyb20gPSBvbGRUZXh0W2ldIHx8ICIiOwovLyAgICAgICAgICAgICBjb25zdCB0byA9IG5ld1RleHRbaV0gfHwgIiI7Ci8vICAgICAgICAgICAgIGNvbnN0IHN0YXJ0ID0gTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogNDApOwovLyAgICAgICAgICAgICBjb25zdCBlbmQgPSBzdGFydCArIE1hdGguZmxvb3IoTWF0aC5yYW5kb20oKSAqIDQwKTsKLy8gICAgICAgICAgICAgdGhpcy5xdWV1ZS5wdXNoKHsgZnJvbSwgdG8sIHN0YXJ0LCBlbmQgfSk7Ci8vICAgICAgICAgICB9Ci8vICAgICAgICAgICBjYW5jZWxBbmltYXRpb25GcmFtZSh0aGlzLmZyYW1lUmVxdWVzdCk7Ci8vICAgICAgICAgICB0aGlzLmZyYW1lID0gMDsKLy8gICAgICAgICAgIHRoaXMudXBkYXRlKCk7Ci8vICAgICAgICAgICByZXR1cm4gcHJvbWlzZTsKLy8gICAgICAgICB9Ci8vICAgICAgICAgdXBkYXRlKCkgewovLyAgICAgICAgICAgbGV0IG91dHB1dCA9ICIiOwovLyAgICAgICAgICAgbGV0IGNvbXBsZXRlID0gMDsKLy8gICAgICAgICAgIGZvciAobGV0IGkgPSAwLCBuID0gdGhpcy5xdWV1ZS5sZW5ndGg7IGkgPCBuOyBpKyspIHsKLy8gICAgICAgICAgICAgbGV0IHsgZnJvbSwgdG8sIHN0YXJ0LCBlbmQsIGNoYXIgfSA9IHRoaXMucXVldWVbaV07Ci8vICAgICAgICAgICAgIGlmICh0aGlzLmZyYW1lID49IGVuZCkgewovLyAgICAgICAgICAgICAgIGNvbXBsZXRlKys7Ci8vICAgICAgICAgICAgICAgb3V0cHV0ICs9IHRvOwovLyAgICAgICAgICAgICB9IGVsc2UgaWYgKHRoaXMuZnJhbWUgPj0gc3RhcnQpIHsKLy8gICAgICAgICAgICAgICBpZiAoIWNoYXIgfHwgTWF0aC5yYW5kb20oKSA8IDAuMjgpIHsKLy8gICAgICAgICAgICAgICAgIGNoYXIgPSB0aGlzLnJhbmRvbUNoYXIoKTsKLy8gICAgICAgICAgICAgICAgIHRoaXMucXVldWVbaV0uY2hhciA9IGNoYXI7Ci8vICAgICAgICAgICAgICAgfQovLyAgICAgICAgICAgICAgIG91dHB1dCArPSBgPHNwYW4gY2xhc3M9ImR1ZCI+JHtjaGFyfTwvc3Bhbj5gOwovLyAgICAgICAgICAgICB9IGVsc2UgewovLyAgICAgICAgICAgICAgIG91dHB1dCArPSBmcm9tOwovLyAgICAgICAgICAgICB9Ci8vICAgICAgICAgICB9Ci8vICAgICAgICAgICB0aGlzLmVsLmlubmVySFRNTCA9IG91dHB1dDsKLy8gICAgICAgICAgIGlmIChjb21wbGV0ZSA9PT0gdGhpcy5xdWV1ZS5sZW5ndGgpIHsKLy8gICAgICAgICAgICAgdGhpcy5yZXNvbHZlKCk7Ci8vICAgICAgICAgICB9IGVsc2UgewovLyAgICAgICAgICAgICB0aGlzLmZyYW1lUmVxdWVzdCA9IHJlcXVlc3RBbmltYXRpb25GcmFtZSh0aGlzLnVwZGF0ZSk7Ci8vICAgICAgICAgICAgIHRoaXMuZnJhbWUrKzsKLy8gICAgICAgICAgIH0KLy8gICAgICAgICB9Ci8vICAgICAgICAgcmFuZG9tQ2hhcigpIHsKLy8gICAgICAgICAgIHJldHVybiB0aGlzLmNoYXJzW01hdGguZmxvb3IoTWF0aC5yYW5kb20oKSAqIHRoaXMuY2hhcnMubGVuZ3RoKV07Ci8vICAgICAgICAgfQovLyAgICAgICB9Ci8vICAgICAgIC8vIOS9v+eUqOaWueazlQovLyAgICAgICBsZXQgZWwgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCIjZGVzY1RleHQiKTsKLy8gICAgICAgY29uc29sZS5sb2coImVsOiAiLCBlbCk7Ci8vICAgICAgIGlmICghZWwpIHsKLy8gICAgICAgICBjb25zdCB0aW1lciA9IHNldEludGVydmFsKCgpID0+IHsKLy8gICAgICAgICAgIGlmIChlbCkgewovLyAgICAgICAgICAgICBpbml0KCk7Ci8vICAgICAgICAgICAgIHRpbWVyICYmIGNsZWFySW50ZXJ2YWwodGltZXIpOwovLyAgICAgICAgICAgfQovLyAgICAgICAgICAgZWwgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCIjZGVzY1RleHQiKTsKLy8gICAgICAgICB9LCAxMDApOwovLyAgICAgICB9IGVsc2UgewovLyAgICAgICAgIGluaXQoKTsKLy8gICAgICAgfQovLyAgICAgICBmdW5jdGlvbiBpbml0KCkgewovLyAgICAgICAgIGNvbnN0IGZ4ID0gbmV3IFRleHRTY3JhbWJsZShlbCk7Ci8vICAgICAgICAgY29uc3QgcGhyYXNlcyA9IFsKLy8gICAgICAgICAgICLmiJHmmK/kuIDlkI3liY3nq68iLAovLyAgICAgICAgICAgIueIseWQg+Wwj+eGiumlvOW5siIsCi8vICAgICAgICAgICAi5LiK54+t5Y+q5Li65LiL54+tIiwKLy8gICAgICAgICAgICLlt6XotYTliJrlpJ/ml6nppJAiLAovLyAgICAgICAgICAgIuavj+aZmumDveimgeWKoOePrSIsCi8vICAgICAgICAgICAi5Y+q5rGC57q/5LiK5bmz5a6JIiwKLy8gICAgICAgICAgICLlpLTlj5Hlv6vopoHmjonlrowiLAovLyAgICAgICAgICAgIuWJjeerr+ecn+eahOWlvemaviIsCi8vICAgICAgICAgICAi5Y+q5piv5peg5ZCN5YmN56uvIiwKLy8gICAgICAgICAgICLlhpnku6PnoIHnmoTmhqjmhqgiCi8vICAgICAgICAgXTsKLy8gICAgICAgICAvLyBmeC5zZXRUZXh0KCflhpnku6PnoIHnmoTmhqjmhqgnKQovLyAgICAgICAgIGxldCBjb3VudGVyID0gMDsKLy8gICAgICAgICBjb25zdCBuZXh0ID0gKCkgPT4gewovLyAgICAgICAgICAgZnguc2V0VGV4dChwaHJhc2VzW2NvdW50ZXJdKS50aGVuKCgpID0+IHsKLy8gICAgICAgICAgICAgc2V0VGltZW91dChuZXh0LCAyMDAwKTsKLy8gICAgICAgICAgIH0pOwovLyAgICAgICAgICAgY291bnRlciA9IChjb3VudGVyICsgMSkgJSBwaHJhc2VzLmxlbmd0aDsKLy8gICAgICAgICB9OwovLyAgICAgICAgIG5leHQoKTsKLy8gICAgICAgfQ=="},{"version":3,"sources":["E:/测试个人博客2/blog/blog/README.md"],"names":["mounted","ifJanchor","document","getElementById","parentNode","removeChild","a","createElement","id","className","getElementsByClassName","append","targetA","addEventListener","e","scrollFn","methods","windowH","clientHeight","documentElement","scrollTop"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA,eAAe;AAEbA,EAAAA,OAFa,qBAEF;AAAA;;AACT,QAAMC,SAAS,GAAGC,QAAQ,CAACC,cAAT,CAAwB,aAAxB,CAAlB;AACAF,IAAAA,SAAS,IAAIA,SAAS,CAACG,UAAV,CAAqBC,WAArB,CAAiCJ,SAAjC,CAAb;AACA,QAAIK,CAAC,GAAGJ,QAAQ,CAACK,aAAT,CAAuB,GAAvB,CAAR;AACAD,IAAAA,CAAC,CAACE,EAAF,GAAO,aAAP;AACAF,IAAAA,CAAC,CAACG,SAAF,GAAc,aAAd;AACAP,IAAAA,QAAQ,CAACQ,sBAAT,CAAgC,MAAhC,EAAwC,CAAxC,EAA2CC,MAA3C,CAAkDL,CAAlD;AACA,QAAIM,OAAO,GAAGV,QAAQ,CAACC,cAAT,CAAwB,aAAxB,CAAd;AACAS,IAAAA,OAAO,CAACC,gBAAR,CAAyB,OAAzB,EAAkC,UAAAC,CAAC,EAAI;AAAE;AACvC,MAAA,KAAI,CAACC,QAAL;AACD,KAFD;AAGD,GAbY;AAebC,EAAAA,OAAO,EAAE;AACPD,IAAAA,QADO,sBACI;AACT,UAAME,OAAO,GAAGf,QAAQ,CAACQ,sBAAT,CAAgC,MAAhC,EAAwC,CAAxC,EAA2CQ,YAA3D,CADS,CACgE;;AACzEhB,MAAAA,QAAQ,CAACiB,eAAT,CAAyBC,SAAzB,GAAqCH,OAArC,CAFS,CAEqC;AAC/C;AAJM;AAfI,CAAf,C,CAwBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n\n\nexport default {\n\n  mounted () {\n    const ifJanchor = document.getElementById(\"JanchorDown\"); \n    ifJanchor && ifJanchor.parentNode.removeChild(ifJanchor);\n    let a = document.createElement('a');\n    a.id = 'JanchorDown';\n    a.className = 'anchor-down';\n    document.getElementsByClassName('hero')[0].append(a);\n    let targetA = document.getElementById(\"JanchorDown\");\n    targetA.addEventListener('click', e => { // 添加点击事件\n      this.scrollFn();\n    });\n  },\n\n  methods: {\n    scrollFn() {\n      const windowH = document.getElementsByClassName('hero')[0].clientHeight; // 获取窗口高度\n      document.documentElement.scrollTop = windowH; // 滚动条滚动到指定位置\n    }\n  }\n\n}\n\n// // 打字机代码\n//       class TextScramble {\n//         constructor(el) {\n//           this.el = el;\n//           this.chars = \"!<>-_/[]{}—=+*^?#________\";\n//           this.update = this.update.bind(this);\n//         }\n//         setText(newText) {\n//           const oldText = this.el.innerText;\n//           const length = Math.max(oldText.length, newText.length);\n//           const promise = new Promise((resolve) => (this.resolve = resolve));\n//           this.queue = [];\n//           for (let i = 0; i < length; i++) {\n//             const from = oldText[i] || \"\";\n//             const to = newText[i] || \"\";\n//             const start = Math.floor(Math.random() * 40);\n//             const end = start + Math.floor(Math.random() * 40);\n//             this.queue.push({ from, to, start, end });\n//           }\n//           cancelAnimationFrame(this.frameRequest);\n//           this.frame = 0;\n//           this.update();\n//           return promise;\n//         }\n//         update() {\n//           let output = \"\";\n//           let complete = 0;\n//           for (let i = 0, n = this.queue.length; i < n; i++) {\n//             let { from, to, start, end, char } = this.queue[i];\n//             if (this.frame >= end) {\n//               complete++;\n//               output += to;\n//             } else if (this.frame >= start) {\n//               if (!char || Math.random() < 0.28) {\n//                 char = this.randomChar();\n//                 this.queue[i].char = char;\n//               }\n//               output += `<span class=\"dud\">${char}</span>`;\n//             } else {\n//               output += from;\n//             }\n//           }\n//           this.el.innerHTML = output;\n//           if (complete === this.queue.length) {\n//             this.resolve();\n//           } else {\n//             this.frameRequest = requestAnimationFrame(this.update);\n//             this.frame++;\n//           }\n//         }\n//         randomChar() {\n//           return this.chars[Math.floor(Math.random() * this.chars.length)];\n//         }\n//       }\n\n//       // 使用方法\n//       let el = document.querySelector(\"#descText\");\n//       console.log(\"el: \", el);\n//       if (!el) {\n//         const timer = setInterval(() => {\n//           if (el) {\n//             init();\n//             timer && clearInterval(timer);\n//           }\n//           el = document.querySelector(\"#descText\");\n//         }, 100);\n//       } else {\n//         init();\n//       }\n\n//       function init() {\n//         const fx = new TextScramble(el);\n//         const phrases = [\n//           \"我是一名前端\",\n//           \"爱吃小熊饼干\",\n//           \"上班只为下班\",\n//           \"工资刚够早餐\",\n//           \"每晚都要加班\",\n//           \"只求线上平安\",\n//           \"头发快要掉完\",\n//           \"前端真的好难\",\n//           \"只是无名前端\",\n//           \"写代码的憨憨\"\n//         ];\n//         // fx.setText('写代码的憨憨')\n//         let counter = 0;\n//         const next = () => {\n//           fx.setText(phrases[counter]).then(() => {\n//             setTimeout(next, 2000);\n//           });\n//           counter = (counter + 1) % phrases.length;\n//         };\n//         next();\n//       }\n"]}]}